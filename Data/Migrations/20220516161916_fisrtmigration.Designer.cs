// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(ExamenContext))]
    [Migration("20220516161916_fisrtmigration")]
    partial class fisrtmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CagnotteParticipant", b =>
                {
                    b.Property<int>("CagnottesCagnotteId")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantsParticipantId")
                        .HasColumnType("int");

                    b.HasKey("CagnottesCagnotteId", "ParticipantsParticipantId");

                    b.HasIndex("ParticipantsParticipantId");

                    b.ToTable("CagnotteParticipant");
                });

            modelBuilder.Entity("Domain.Cagnotte", b =>
                {
                    b.Property<int>("CagnotteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateLimite")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntrepriseFk")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SommeDemendee")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("CagnotteId");

                    b.HasIndex("EntrepriseFk");

                    b.ToTable("Cagnottes");
                });

            modelBuilder.Entity("Domain.Entreprise", b =>
                {
                    b.Property<int>("EntrepriseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdresseEntreprise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailEntreprise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomEntreprise")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntrepriseId");

                    b.ToTable("Entreprises");
                });

            modelBuilder.Entity("Domain.Participant", b =>
                {
                    b.Property<int>("ParticipantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MailParticipant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParticipantId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("Domain.Participation", b =>
                {
                    b.Property<int>("CagnotteFk")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantFk")
                        .HasColumnType("int");

                    b.Property<int>("Montant")
                        .HasColumnType("int");

                    b.HasKey("CagnotteFk", "ParticipantFk");

                    b.HasIndex("ParticipantFk");

                    b.ToTable("Participations");
                });

            modelBuilder.Entity("CagnotteParticipant", b =>
                {
                    b.HasOne("Domain.Cagnotte", null)
                        .WithMany()
                        .HasForeignKey("CagnottesCagnotteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Participant", null)
                        .WithMany()
                        .HasForeignKey("ParticipantsParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Cagnotte", b =>
                {
                    b.HasOne("Domain.Entreprise", "Entreprise")
                        .WithMany("Cagnottes")
                        .HasForeignKey("EntrepriseFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entreprise");
                });

            modelBuilder.Entity("Domain.Participation", b =>
                {
                    b.HasOne("Domain.Cagnotte", "Cagnotte")
                        .WithMany()
                        .HasForeignKey("CagnotteFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Participant", "Participant")
                        .WithMany()
                        .HasForeignKey("ParticipantFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cagnotte");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("Domain.Entreprise", b =>
                {
                    b.Navigation("Cagnottes");
                });
#pragma warning restore 612, 618
        }
    }
}
